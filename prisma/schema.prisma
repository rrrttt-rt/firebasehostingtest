// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// =============== ENUMs ===============
enum UserType {
  ADMIN
  USER
  GUEST
}

enum PostStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}

// =============== MODELS ===============
model User {
  id        String   @id @default(uuid()) @db.Uuid
  email     String   @unique
  name      String?
  userType  UserType @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // リレーション
  posts     Post[]
  comments  Comment[]

  @@map("users")
}

model Post {
  id        String     @id @default(uuid()) @db.Uuid
  title     String
  content   String?
  status    PostStatus @default(DRAFT)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  authorId  String     @db.Uuid

  // リレーション
  author     User           @relation(fields: [authorId], references: [id], onDelete: Cascade)
  comments   Comment[]
  categories PostCategory[]

  @@map("posts")
}

model Comment {
  id        String   @id @default(uuid()) @db.Uuid
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  postId    String   @db.Uuid
  authorId  String   @db.Uuid

  // リレーション
  post   Post @relation(fields: [postId], references: [id], onDelete: Cascade)
  author User @relation(fields: [authorId], references: [id], onDelete: Cascade)

  @@map("comments")
}

model Category {
  id          String   @id @default(uuid()) @db.Uuid
  name        String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // リレーション
  postCategories PostCategory[]

  @@map("categories")
}

model PostCategory {
  postId     String @db.Uuid
  categoryId String @db.Uuid

  // リレーション
  post     Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  category Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  @@id([postId, categoryId])
  @@map("post_categories")
} 